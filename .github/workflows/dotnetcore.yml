name: .NET Core # will work, but only show the text and not the value $[env.nameVar] 
# ${{ env.nameVar }} this one will not start

on: 
  push:
  
  workflow_dispatch: 

env:
  nameVar: "[name from var]"

jobs:
  build-and-deploy:
    #name: Testing with ${{ env.nameVar }} this one will not start
    environment: Production

    runs-on: ubuntu-latest

    steps:
    - run: echo "GITHUB_WORKFLOW=Workflow name from step" >> $GITHUB_ENV

    - uses: actions/checkout@v2

    - name: Setup .NET Core    
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.0.100
    
    # dotnet build and publish
    - name: Build with dotnet ${{ env.nameVar }}
      run: |
        dotnet build --configuration Release ./dotnet-core-webapp/dotnetcore-webapp.csproj
      
    - name: dotnet publish
      run: |
        dotnet publish -c Release -o dotnetcorewebapp ./dotnet-core-webapp
        
    # test for usage in versioning
    - name: Hello world
      run: echo Hello world, run number = $NBR
      env: 
        NBR: ${{ github.RUN_NUMBER }}
        
    # SonarCloud integration
    - name: SonarCloud Scan
      uses: rajbos-actions/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # is necessary and is automatically injected by GitHub
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with: 
        projectVersion: ${{ github.RUN_NUMBER }}
        projectBaseDir: dotnet-core-webapp
        
    # publish to Azure App Service
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: rajbos-actions/webapps-deploy@v2.1.5
      with: 
        app-name: dotnetcorewebapp19 # Replace with your app name
        publish-profile: ${{ secrets.publish_profile }} # Define secret variable in repository settings as per action documentation
        package: './dotnetcorewebapp' 
        
    - name: Curl the website as a smoke test
      uses: rajbos-actions/curl@61d92b5169ea0425820dd13cf6fbad66b483e9f1
      with:
        args: -X GET https://dotnetcorewebapp19.azurewebsites.net/        

  webtest:

    runs-on: windows-latest
    needs: build-and-deploy

    steps:
    - uses: actions/checkout@v2

    - name: Run Web Test
      run: |
        # overwrite the AppSettings.json
        $pathToFile = "./dotnet-core-webapp.webtests/AppSettings.json"
        $fileContent = Get-Content $pathToFile
        $fileContent = $fileContent.Replace("http://localhost/dotnetcore-webapp/", "https://dotnetcorewebapp19.azurewebsites.net/")
        Set-Content $pathToFile $fileContent

        # build the test project
        dotnet build --configuration Release ./dotnet-core-webapp.webtests
        cd ./dotnet-core-webapp.webtests

        # execute the tests
        dotnet test -l:trx

    # Using the trx-parser action
    - name: Parse Trx files
      uses: rajbos-actions/trx-parser@v0.0.5
      id: trx-parser
      with:
        TRX_PATH: ${{ github.workspace }}\\dotnet-core-webapp.webtests\TestResults #This should be the path to your TRX files
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
